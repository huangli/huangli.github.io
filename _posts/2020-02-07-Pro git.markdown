---
layout: post
title: "Pro git 笔记"
date: 2020-02-06 6:34:37
tags: git 英文原版
categories: 读书笔记
---

### 1. What is git

- To be efficient, if files have not changed, Git doesn’t store the file again, just a link to the previous identical file it has already stored. Git thinks about its data more like a stream of snapshots.
- states
    + **Modified** means that you have changed the file but have not committed it to your database yet
    + **Staged** means that you have marked a modified file in its current version to go into your next commit snapshot
    + **Committed** means that the data is safely stored in your local database

#### Global config 

- /etc/gitconfig
- ~/.gitconfig or ~/.config/git/config
- .git/config
- Each level overrides values in the previous level, so values in .git/config trump those in /etc/gitconfig


#### Your Identity

``` 
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
```


#### Help 

``` 
$ git help <verb>
$ git <verb> --help
$ man git-<verb>
$ git add -h
```

- you can ask for the more concise “help” output with the -h option, as in


### 2. Git Basics

> If you can read only one chapter to get going with Git, this is it

#### 2.2 Recording Changes to the Repository

- You typically obtain a Git repository in one of two ways:
    + You can take a local directory that is currently not under version control, and turn it into a Git repository, or
    + You can clone an existing Git repository from elsewhere.

```
- git clone https://github.com/libgit2/libgit2

If you want to clone the repository into a directory named something other than libgit2
- git clone https://github.com/libgit2/libgit2 mylibgit
```

- $ git status -s (more simplified)
- .gitignore 包含不需要track的文件，可以用正则

```
Here is another example .gitignore file:

# ignore all .a files
*.a

# but do track lib.a, even though you're ignoring .a files above
!lib.a

# only ignore the TODO file in the current directory, not subdir/TODO
/TODO

# ignore all files in any directory named build
build/

# ignore doc/notes.txt, but not doc/server/arch.txt
doc/*.txt

# ignore all .pdf files in the doc/ directory and any of its subdirectories
doc/**/*.pdf

# [https://github.com/github/gitignore](https://github.com/github/gitignore)
```


- --staged and --cached are synonyms
- git commit -am (-a 自动stag文件)
- git rm 删除文件
- 文件移动git不追踪
- git mv is one command instead of three
    + $ mv README.md README
    + $ git rm README.md
    + $ git add README

#### 2.3 Viewing the Commit History

- git log(之前忘记commit的是什么版本的时候，可以使用)
- git log -p -2(最近两次commit有啥不同)
- git log --stat(简单版本)
- git log --pretty=format:"%h - %an, %ar : %s"(alias gh='git log'，方便以后看)
